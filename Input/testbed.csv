DomainProblem,Plan
"<GOAL>[a](opened)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[c](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, signal_a_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, signal_a_c, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, signal_a_c, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, signal_a_b, signal_a_c, open_a, peek_c, move_to_empty_c, announce_room_empty_c"
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, signal_a_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, signal_a_c, open_a, peek_a, peek_c"
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[a][b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a"
"<GOAL>[b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_a"
"<GOAL>[a](opened)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b"
"<GOAL>[a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b"
"<GOAL>[c](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, signal_a_c, open_b, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, open_b, signal_a_b, peek_b, signal_a_c, announce_room_box_b"
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, open_b, signal_a_b, peek_b, signal_a_c, announce_room_box_b"
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, signal_a_c, open_b, peek_c"
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_b, peek_a, signal_a_c, announce_room_box_a"
"<GOAL>[a](opened)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b"
"<GOAL>[a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b"
"<GOAL>[a][b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b"
"<GOAL>[b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b"
"<GOAL>[b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b"
"<GOAL>[b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a"
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[c](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c, move_to_empty_c, signal_a_b, announce_room_empty_c"
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, open_a, peek_c"
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_b, open_a, peek_a, peek_c"
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_b"
"<GOAL>[c](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_a, peek_b, peek_c"
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c, move_to_empty_c, announce_room_empty_c"
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_a, peek_a, peek_c"
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[c](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, signal_a_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[d](opened)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_d, open_a"
"<GOAL>[e](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_e, signal_a_e, open_a, peek_e"
"<GOAL>[b][a](tail), -looking a, [e][a](tail)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][d](tail)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[a][b](tail), [e](opened), [d](-opened)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (tail), -looking d, not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","distract_a_d, move_to_box_a, move_to_box_b, signal_a_b, open_a, peek_b"
"<GOAL>[b][e](opened), [b][d](tail), [b](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_d, signal_a_b, open_a"
"<GOAL>[b][e](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[d](opened)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_d, move_to_box_e, open_e"
"<GOAL>[e](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_e, open_e, signal_a_e, peek_e"
"<GOAL>[b][a](tail), -looking a, [e][a](tail)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][d](tail)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[a][b](tail), [e](opened), [d](-opened)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (tail), -looking d, not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][e](opened), [b][d](tail), [b](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, move_to_box_e, signal_a_b, open_e"
"<GOAL>[b][e](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[a][d](opened)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_d, open_b"
"<GOAL>[a][c](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][a](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, peek_a, signal_a_b, announce_room_box_a"
"<GOAL>[b][d](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, open_b, peek_d, signal_a_b, announce_room_box_d"
"<GOAL>[a][b](tail), [d][b](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>[b][d](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, open_b, peek_d, signal_a_b, announce_room_box_d"
"<GOAL>[b][d](opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, open_b, signal_a_b, peek_b"
"<GOAL>[b][c](-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b"
"<GOAL>[b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, open_b"
"<GOAL>[b][c](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, signal_a_c, open_b, peek_a"
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a][d](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_d, open_a, peek_a, announce_room_box_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[b][e](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c][e](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b][d](-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [e](opened), [b](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[a](opened)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a"
"<GOAL>[a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a"
"<GOAL>[b][a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, announce_room_box_a"
"<GOAL>[b](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_b"
"<GOAL>[c](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>[c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, move_to_box_c, open_a, peek_c"
"<GOAL>[c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](opened)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b][a](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail)<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_c, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>in_room_empty a, in_room_empty b, in_room_empty c, tail, has_key a, looking a, [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c)), [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, [a](opened)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [b][a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [a][b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, move_to_empty_a, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, move_to_empty_a, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, move_to_empty_a, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key a), [a b](not (has_key b)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, signal_a_b, open_a, move_to_empty_b, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](opened)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_a, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_b, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b][a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, signal_a_c, open_b, move_to_empty_b, peek_c, move_to_empty_c"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_c, signal_a_c, open_b, move_to_empty_b, peek_c, move_to_empty_c"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key b), [a b c](not (has_key a)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](not (looking c))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_b, peek_a, move_to_empty_a, signal_a_c, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [a](opened)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_a, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_b, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, [b][a](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [a][b](tail)<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, in_room_empty a, in_room_empty b, [a b](in_room_empty a), [a b](in_room_empty b), [a b](not (in_room_box a)), [a b](not (in_room_box b)), [a b](has_key b), [a b](not (has_key a)), [a b](not (opened)), [a b](looking a), [a b](not (looking b))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_b, move_to_empty_b, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](opened)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b][a](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, signal_a_b, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail)<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](not (looking b)), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](opened)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b][a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [b](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_b, move_to_empty_b, announce_room_empty_b, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_b, move_to_empty_b, announce_room_empty_b, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_c, open_a, peek_c, move_to_empty_c, announce_room_empty_c, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, [a b c](in_room_empty a), [a b c](in_room_empty b), [a b c](in_room_empty c), [a b c](not (in_room_box a)), [a b c](not (in_room_box b)), [a b c](not (in_room_box c)), [a b c](has_key a), [a b c](not (has_key b)), [a b c](not (has_key c)), [a b c](not (opened)), [a b c](looking a), [a b c](looking b), [a b c](looking c)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_b, open_a, peek_a, move_to_empty_a, announce_room_empty_a, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a](opened)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][a](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail)<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [d](opened)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, move_to_box_d, open_a, move_to_empty_a, move_to_empty_d"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [e](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][a](tail), -looking a, [e][a](tail)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][d](tail)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a][b](tail), [e](opened), [d](-opened)<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b] (tail), -looking d, not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][e](opened), [b][d](tail), [b](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][e](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [d](opened)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_d, move_to_box_e, open_e, move_to_empty_d, move_to_empty_e"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [e](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_e, open_e, signal_a_e, peek_e, move_to_empty_e"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][a](tail), -looking a, [e][a](tail)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][d](tail)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a][b](tail), [e](opened), [d](-opened)<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b] (tail), -looking d, not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][e](opened), [b][d](tail), [b](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][e](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key e, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key e), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key a)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](not (looking c)), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a][d](opened)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a][c](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][a](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][d](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a][b](tail), [d][b](tail)<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b, announce_room_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][d](tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][d](opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][c](-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, open_b, signal_a_b, peek_b, move_to_empty_b"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_b, move_to_box_d, open_b, move_to_empty_b, move_to_empty_d"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [b][c](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key b, looking a, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, [a b c d](in_room_empty a), [a b c d](in_room_empty b), [a b c d](in_room_empty c), [a b c d](in_room_empty d), [a b c d](not (in_room_box a)), [a b c d](not (in_room_box b)), [a b c d](not (in_room_box c)), [a b c d](not (in_room_box d)), [a b c d](has_key b), [a b c d](not (has_key a)), [a b c d](not (has_key c)), [a b c d](not (has_key d)), [a b c d](not (opened)), [a b c d](looking a), [a b c d](not (looking b)), [a b c d](not (looking c)), [a b c d](looking d)<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a](opened)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a][d](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][a](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][e](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail)<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c][e](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b][d](-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b][d](opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [e](opened), [b](opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking c, looking d, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](not (looking b)), [a b c d e](looking c), [a b c d e](looking d), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a](opened)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b][a](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [b](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail)<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail","move_to_box_a, open_a, peek_a, move_to_empty_a, announce_room_empty_a"
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (-opened), [b] (tail), not([a](tail)), not([a](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), not([a](tail)), not([a](-tail)), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
"<GOAL>in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [c](tail), [b] (opened), [a](tail), not([b](tail)), not([b](-tail))<INIT>tail, has_key a, looking a, looking b, looking c, in_room_empty a, in_room_empty b, in_room_empty c, in_room_empty d, in_room_empty e, [a b c d e](in_room_empty a), [a b c d e](in_room_empty b), [a b c d e](in_room_empty c), [a b c d e](in_room_empty d), [a b c d e](in_room_empty e), [a b c d e](not (in_room_box a)), [a b c d e](not (in_room_box b)), [a b c d e](not (in_room_box c)), [a b c d e](not (in_room_box d)), [a b c d e](not (in_room_box e)), [a b c d e](has_key a), [a b c d e](not (has_key b)), [a b c d e](not (has_key c)), [a b c d e](not (has_key d)), [a b c d e](not (has_key e)), [a b c d e](not (opened)), [a b c d e](looking a), [a b c d e](looking b), [a b c d e](looking c), [a b c d e](not (looking d)), [a b c d e](not (looking e))<ACTION> move_to_box <ACT_TYPE> ontic <PRE> [?ag](in_room_empty ?ag), in_room_empty ?ag <EFFECT> in_room_box ?ag, -in_room_empty ?ag <ACTION> move_to_empty <ACT_TYPE> ontic <PRE> [?ag](in_room_box ?ag), in_room_box ?ag <EFFECT> in_room_empty ?ag, -in_room_box ?ag <ACTION> open <ACT_TYPE> ontic <PRE> [?ag](has_key ?ag), has_key ?ag, in_room_box ?ag <EFFECT> opened <ACTION> signal <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](not (looking ?ag2)) <EFFECT> looking ?ag2 <ACTION> peek <ACT_TYPE> sensing <PRE> [?ag](opened), [?ag](looking ?ag), looking ?ag, opened, in_room_box ?ag <EFFECT> tail <ACTION> distract <ACT_TYPE> ontic <PRE> [?ag1](looking ?ag1), [?ag2](looking ?ag2) <EFFECT> not (looking ?ag2) <ACTION> announce_room_box <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_box ?ag <EFFECT> tail <ACTION> announce_room_empty <ACT_TYPE> announcement <PRE> [?ag](tail), tail, in_room_empty ?ag <EFFECT> tail",NOT FOUND
