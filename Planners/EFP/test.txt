%This file is automatically generated from an E-PDDL specification and follows the mAp syntax.

%%%%%%%%%%%%%%%%%%%%%%%%%    FLUENTS    %%%%%%%%%%%%%%%%%%%%%%%%
%Fluents generated from EPDDL by grounding each predicate (and cheking in :init, :goal and actions for extra predicates)
%The fluents are lexicographically sorted and printed in sets of 10

fluent free_table, owner_alice_black, owner_alice_orange, owner_alice_red, owner_alice_yellow, owner_bob_black, owner_bob_orange, owner_bob_red, owner_bob_yellow, table_black;
fluent table_orange, table_red, table_yellow;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    ACTIONS' NAMES    %%%%%%%%%%%%%%%%%%%%%
%Actions' names generated from EPDDL by adding to each action names its grounded predicates

action look_up_alice_red, look_up_alice_orange, look_up_alice_yellow, look_up_alice_black, look_up_bob_red, look_up_bob_orange, look_up_bob_yellow, look_up_bob_black;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    AGENTS' NAMES    %%%%%%%%%%%%%%%%%%%%%%
%Agents' names generated from EPDDL by looking at the 'agent' predicate

agent alice, bob;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%    ACTIONS' SPECIFICATIONS    %%%%%%%%%%%%%%%%
%Actions' specifications generated from EPDDL by grounding each action's definition

%%%Action look_up_alice_red

executable look_up_alice_red;
look_up_alice_red causes owner_alice_red if owner_alice_red;
alice observes look_up_alice_red;

%%%

%%%Action look_up_alice_orange

executable look_up_alice_orange;
look_up_alice_orange causes owner_alice_orange if owner_alice_orange;
alice observes look_up_alice_orange;

%%%

%%%Action look_up_alice_yellow

executable look_up_alice_yellow;
look_up_alice_yellow causes owner_alice_yellow if owner_alice_yellow;
alice observes look_up_alice_yellow;

%%%

%%%Action look_up_alice_black

executable look_up_alice_black;
look_up_alice_black causes owner_alice_black if owner_alice_black;
alice observes look_up_alice_black;

%%%

%%%Action look_up_bob_red

executable look_up_bob_red;
look_up_bob_red causes owner_bob_red if owner_bob_red;
bob observes look_up_bob_red;

%%%

%%%Action look_up_bob_orange

executable look_up_bob_orange;
look_up_bob_orange causes owner_bob_orange if owner_bob_orange;
bob observes look_up_bob_orange;

%%%

%%%Action look_up_bob_yellow

executable look_up_bob_yellow;
look_up_bob_yellow causes owner_bob_yellow if owner_bob_yellow;
bob observes look_up_bob_yellow;

%%%

%%%Action look_up_bob_black

executable look_up_bob_black;
look_up_bob_black causes owner_bob_black if owner_bob_black;
bob observes look_up_bob_black;

%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL FLUENTS TRUTH   %%%%%%%%%%%%%%%%%%
%Fluents are considered true when are inserted in :init; otherwise are considered false

%%%True fluents
initially owner_bob_red, owner_bob_black, owner_bob_orange, free_table;
%%%False fluents
initially -table_orange, -owner_alice_yellow, -owner_alice_black, -table_black, -owner_alice_red, -owner_bob_yellow, -owner_alice_orange, -table_yellow, -table_red;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL BELIEFS TRUTH   %%%%%%%%%%%%%%%%%%
%Extracted from the :init field

initially C([alice,bob],owner_bob_red);
initially C([alice,bob],owner_bob_black);
initially C([alice,bob],owner_bob_orange);
initially C([alice,bob],free_table);
initially C([alice,bob],-table_orange);
initially C([alice,bob],-owner_alice_yellow);
initially C([alice,bob],-owner_alice_black);
initially C([alice,bob],-table_black);
initially C([alice,bob],-owner_alice_red);
initially C([alice,bob],-owner_bob_yellow);
initially C([alice,bob],-owner_alice_orange);
initially C([alice,bob],-table_yellow);
initially C([alice,bob],-table_red);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%    GOALS   %%%%%%%%%%%%%%%%%%%%%%%%%%
%The goals of the plan. Each goal is presented separately to ease the reading

goal B(bob,owner_bob_red);
